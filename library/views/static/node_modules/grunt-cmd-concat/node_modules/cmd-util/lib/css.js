function match(text,key){var re=new RegExp("^\\/\\*!\\s*"+key+"\\s+(.*?)\\s*\\*\\/$"),m=text.match(re);return m?m[1]:void 0}function parseBlock(code){function pushStringNode(){if(stringNode.code){var text=stringNode.code.replace(/^\n+/,"");text=text.replace(/\n+$/,""),text&&(stringNode.code=text,tree.push(stringNode)),stringNode={type:"string",code:""}}}function parseLine(){if(0===blockDepth){var text=lines.shift(),re=/^@import\s+(?:url\()?(\'|\")([^\)]+)\1\)?;?\s*$/,m=match(text,"import");m||(m=text.match(re),m=m?m[2]:null),m?(pushStringNode(),tree.push({id:m,type:"import"})):stringNode.code=[stringNode.code,text].join("\n")}}function parseInBlock(){var text=lines[0],start=match(text,"block");if(start)return lines=lines.slice(1),0===blockDepth?(pushStringNode(),blockNode.id=start,blockNode.type="block",blockNode.code=""):blockNode.code=[blockNode.code,text].join("\n"),blockDepth++,void 0;var re=/\/\*!\s*endblock(\s+[^\*]*)?\s*\*\/$/,end=text.match(re);if(end){if(blockDepth--,0>blockDepth)throw new Error("block indent error.");return lines=lines.slice(1),0===blockDepth?(blockNode.code=parseBlock(blockNode.code),tree.push(blockNode),blockNode={}):blockNode.code=[blockNode.code,text].join("\n"),void 0}blockDepth>0?(lines=lines.slice(1),blockNode.code=[blockNode.code,text].join("\n")):parseLine()}for(var lines=code.split(/\r\n|\r|\n/),tree=[],stringNode={type:"string",code:""},blockNode={},blockDepth=0;lines.length;)parseInBlock();if(0!==blockDepth)throw new Error("block not finished.");return pushStringNode(),tree}exports.parse=function(code){for(var id,line,lines=code.split(/\r\n|\r|\n/),isStarted=!1;!isStarted&&lines.length;)line=lines[0],line.trim()?(isStarted=!0,id=match(line,"define"),id&&(lines=lines.slice(1))):lines=lines.slice(1);var node={};return id&&(node.id=id),node.type="block",node.code=parseBlock(lines.join("\n")),[node]},exports.walk=function(code,fn){function walk(code){Array.isArray(code)&&code.forEach(function(node){fn(node)!==!1&&"block"===node.type&&Array.isArray(node.code)&&walk(node.code,node)})}Array.isArray(code)||(code=exports.parse(code)),walk(code)},exports.stringify=function(code,filter){function print(code,parent){var cursor="";return code.forEach(function(node){if(filter){var ret=filter(node,parent);if(ret===!1)return;ret&&ret.type&&(node=ret)}return"string"===node.type?(cursor=[cursor,node.code].join("\n"),void 0):"import"===node.type?(cursor=[cursor,"/*! import "+node.id+" */"].join("\n"),void 0):"block"===node.type&&node.id?(cursor=[cursor,"","/*! block "+node.id+" */",print(node.code,node),"/*! endblock "+node.id+" */",""].join("\n"),void 0):("block"!==node.type||node.id||(cursor=print(node.code,node)),void 0)}),cursor=cursor.replace(/^\n+/,""),cursor=cursor.replace(/\n+$/,""),cursor=cursor.replace(/\n{3,}/g,"\n\n")}return Array.isArray(code)?print(code):code};