<?php
namespace com\tizi\thrift\service\downshare;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


class DownloadInfo {
  static $_TSPEC;

  public $teacher_id = null;
  public $file_id = null;
  public $share_time = null;
  public $student_id = null;
  public $download_ip = null;
  public $download_time = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'teacher_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'file_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'share_time',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'student_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'download_ip',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'download_time',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['teacher_id'])) {
        $this->teacher_id = $vals['teacher_id'];
      }
      if (isset($vals['file_id'])) {
        $this->file_id = $vals['file_id'];
      }
      if (isset($vals['share_time'])) {
        $this->share_time = $vals['share_time'];
      }
      if (isset($vals['student_id'])) {
        $this->student_id = $vals['student_id'];
      }
      if (isset($vals['download_ip'])) {
        $this->download_ip = $vals['download_ip'];
      }
      if (isset($vals['download_time'])) {
        $this->download_time = $vals['download_time'];
      }
    }
  }

  public function getName() {
    return 'DownloadInfo';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->teacher_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->file_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 3:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->share_time);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 4:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->student_id);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 5:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->download_ip);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 6:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->download_time);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('DownloadInfo');
    if ($this->teacher_id !== null) {
      $xfer += $output->writeFieldBegin('teacher_id', TType::I32, 1);
      $xfer += $output->writeI32($this->teacher_id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->file_id !== null) {
      $xfer += $output->writeFieldBegin('file_id', TType::I32, 2);
      $xfer += $output->writeI32($this->file_id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->share_time !== null) {
      $xfer += $output->writeFieldBegin('share_time', TType::STRING, 3);
      $xfer += $output->writeString($this->share_time);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->student_id !== null) {
      $xfer += $output->writeFieldBegin('student_id', TType::I32, 4);
      $xfer += $output->writeI32($this->student_id);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->download_ip !== null) {
      $xfer += $output->writeFieldBegin('download_ip', TType::STRING, 5);
      $xfer += $output->writeString($this->download_ip);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->download_time !== null) {
      $xfer += $output->writeFieldBegin('download_time', TType::STRING, 6);
      $xfer += $output->writeString($this->download_time);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}


